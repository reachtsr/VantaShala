configurations {
    spi
}

dependencies {
    compile project(':model')
    compile project(':utils')
    compile project(':common')
    compile project(':service')
}


// Just a smoke test that using this option does not lead to any exception
compileJava.options.compilerArgs = ['-Xlint:unchecked']

task spiJar(type: Jar) {
    appendix = 'spi'
    from sourceSets.main.output
    include 'com/vs/rest/api/'
}

artifacts {
    spi spiJar
}

task dist(type: Zip) {
    dependsOn spiJar
    from 'src/dist'
    into('libs') {
        from spiJar.archivePath
        from configurations.runtime
    }
}

artifacts {
    archives dist
}

task checkProjectDependency(dependsOn: project(':model').jar) << {
    File cachedSharedJarDir = new File(gradle.gradleUserHomeDir, "cache/multiproject/shared/jars")
    copy {
        from project(':model').jar.archivePath
        into cachedSharedJarDir
    }
    File sharedJar = configurations.compile.files.find { File file -> file.name.startsWith('model')}
    assert sharedJar.absolutePath == project(':model').jar.archivePath.absolutePath
}

