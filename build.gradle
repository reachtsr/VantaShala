
buildscript {

    project.ext {
        springBootVersion = '1.3.0.RELEASE'
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
    repositories {
        mavenCentral()
    }
}

allprojects {

    group = 'com.vs'
    version = '0.0.1-SNAPSHOT'

    configurations {
        provided.all*.exclude group: 'javax.servlet'
    }

}


subprojects {

    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'java'

    apply plugin: 'spring-boot'
    apply plugin: "io.spring.dependency-management"

    dependencies {
        compile("commons-beanutils:commons-beanutils:1.9.2")
        compile("commons-fileupload:commons-fileupload:1.3")
        compile("org.springframework.social:spring-social-facebook")
        compile('org.springframework.boot:spring-boot-starter-aop')
        compile('org.springframework.boot:spring-boot-starter-cache')
        compile('org.springframework.boot:spring-boot-starter-data-mongodb')
        compile('org.springframework.boot:spring-boot-configuration-processor')
        compile('org.springframework.boot:spring-boot-devtools')
        compile('org.springframework.boot:spring-boot-starter-jersey')
        compile('org.springframework.boot:spring-boot-starter-mail')
        compile('org.springframework.session:spring-session')
        compile('org.springframework.boot:spring-boot-starter-social-facebook')
        compile('org.springframework.boot:spring-boot-starter-validation')
        compile('org.springframework.boot:spring-boot-starter-velocity')
        compile('org.springframework.boot:spring-boot-starter-web')
        compile('com.jayway.restassured:rest-assured:2.8.0')
        compile('org.projectlombok:lombok:1.16.6')
        compile("org.springframework.boot:spring-boot-starter-actuator")
        testCompile('org.springframework.boot:spring-boot-starter-test')
        testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')

        testCompile "junit:junit:4.12"
    }

    configurations {
        provided.all*.exclude group: 'javax.servlet'
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenCentral()
    }

    jar {
        manifest.attributes provider: 'gradle'
    }

    if(!project.name.startsWith("web")) {
        println "Disabling BootRepackage for : "+project.name
        bootRepackage.enabled = false;
    }

    task wrapper(type: Wrapper) {
        gradleVersion = '2.9'
    }

    test {
        // this enables output in build/test-results directory
        testLogging {
            exceptionFormat "full"
            events "started", "passed", "skipped", "failed", "standardOut", "standardError"
        }
    }

    task listClasses << {
        tree = fileTree('build/classes') {
            include '**/*.class'
        }
        tree.each {File file ->
            println relativePath(file)
        }
    }

    task testJar(type: Jar) {
        classifier = 'tests'
        from sourceSets.test.output.classesDir
    }

    task show << {
        println ""
        println "-----------------------------------------------"
        println "Project Name: " + projTitle
        println "Version: " + projVersion
        println "Home directory: "
        println "Build output: " + relativePath(compileJava.destinationDir)
        println "Resources output: " + relativePath(processResources.destinationDir)
        println "Test output dir: " + relativePath(sourceSets.test.output.classesDir)
        println "Test result dir: " + relativePath(testResultsDir)
        println "Report dir: " + relativePath(testReportDir)
        println "-----------------------------------------------"
    }

    compileJava.dependsOn(processResources)
}

subprojects.each { subproject -> evaluationDependsOn(subproject.path)}
task allJar( type: Jar, dependsOn: subprojects.tasks["testClasses"] ) {
    baseName = 'allJar'
    subprojects.each { subproject ->
        from subproject.configurations.archives.allArtifacts.files.collect {
            zipTree(it)
        }
    }
}
artifacts {
  //  archives allJar
}